WITH TOTAL_DATA AS (
    SELECT
        YEAR(TO_DATE(PER.DIM_DATE, 'YYYYMMDD')) AS YEAR,
        SOUR.TXT_CATEGORY_LEVEL_2 AS CATEGORY,
        SOUR.TXT_CATEGORY_LEVEL_3 AS SUBCATEGORY,
        SUM(GO.MES_SPEND_CURR_1) AS TOTAL_SPEND
    FROM DATA.VT_C_FACT_GRN_ORDERPOSITION GO
    JOIN DATA.VT_DIM_PERIOD PER ON PER.DIM_DATE = GO.DIM_DATE
    JOIN DATA.VT_DIM_PLANT PL ON PL.DIM_PLANT = GO.DIM_PLANT
    JOIN DATA.VT_DIM_SUPPLIERCOUNTRY SC ON SC.DIM_COUNTRY = GO.DIM_COUNTRY
    JOIN DATA.VT_C_DIM_MATERIAL MAT ON MAT.DIM_MATERIAL = GO.DIM_MATERIAL
    JOIN DATA.VT_C_DIM_SOURCINGTREE_TECHCME SOUR ON SOUR.DIM_SOURCING_TREE = GO.DIM_SOURCING_TREE
    JOIN DATA.VT_C_DIM_ORDERDOCUMENTTYPE ODT ON ODT.DIM_DOCUMENT_TYPE = GO.DIM_DOCUMENT_TYPE
    WHERE PL.TXT_PLANT IN ('Al Taweelah Alumina LLC','Dubai Aluminium PJSC','Emirates Aluminium Company')
        AND ODT.DIM_DOCUMENT_TYPE IN ('DSP100.F.CP','DSP100.F.NB','DSP100.F.ST')
        AND YEAR(TO_DATE(PER.DIM_DATE, 'YYYYMMDD')) = YEAR(CURRENT_DATE)
        AND LOWER(SOUR.TXT_CATEGORY_LEVEL_2 )= LOWER('Valves')
    GROUP BY
        YEAR(TO_DATE(PER.DIM_DATE, 'YYYYMMDD')),
        SOUR.TXT_CATEGORY_LEVEL_2,
        SOUR.TXT_CATEGORY_LEVEL_3
),
SUPPLIER_DATA AS (
SELECT
        YEAR(TO_DATE(PER.DIM_DATE, 'YYYYMMDD')) AS YEAR,
        SOUR.TXT_CATEGORY_LEVEL_2 AS CATEGORY,
        SOUR.TXT_CATEGORY_LEVEL_3 AS SUBCATEGORY,
        SUP.TXT_SUPPLIER AS SUPPLIER,
        SUM(GO.MES_SPEND_CURR_1) AS SUPPLIER_SPEND,
        DENSE_RANK() OVER (PARTITION BY YEAR, CATEGORY, SUBCATEGORY ORDER BY SUPPLIER_SPEND DESC) AS SUPP_RANK
    FROM DATA.VT_C_FACT_GRN_ORDERPOSITION GO
    JOIN DATA.VT_DIM_PERIOD PER ON PER.DIM_DATE = GO.DIM_DATE
    JOIN DATA.VT_C_DIM_SUPPLIER SUP ON SUP.DIM_SUPPLIER = GO.DIM_SUPPLIER
    JOIN DATA.VT_DIM_PLANT PL ON PL.DIM_PLANT = GO.DIM_PLANT
    JOIN DATA.VT_C_DIM_SOURCINGTREE_TECHCME SOUR ON SOUR.DIM_SOURCING_TREE = GO.DIM_SOURCING_TREE
    JOIN DATA.VT_C_DIM_ORDERDOCUMENTTYPE ODT ON ODT.DIM_DOCUMENT_TYPE = GO.DIM_DOCUMENT_TYPE
    WHERE PL.TXT_PLANT IN ('Al Taweelah Alumina LLC','Dubai Aluminium PJSC','Emirates Aluminium Company')
        AND ODT.DIM_DOCUMENT_TYPE IN ('DSP100.F.CP','DSP100.F.NB','DSP100.F.ST')
        AND LOWER(SOUR.TXT_CATEGORY_LEVEL_2 )= LOWER('Valves')
    GROUP BY
        YEAR(TO_DATE(PER.DIM_DATE, 'YYYYMMDD')),
        SOUR.TXT_CATEGORY_LEVEL_2,
        SOUR.TXT_CATEGORY_LEVEL_3,
        SUP.TXT_SUPPLIER
),
SUPP_RANK_DATA AS (
    SELECT
        SD.YEAR,
        SD.CATEGORY,
        SD.SUBCATEGORY,
        SD.SUPPLIER,
        SD.SUPPLIER_SPEND,
        TD.TOTAL_SPEND,
        SD.SUPP_RANK,
        (SD.SUPPLIER_SPEND/TD.TOTAL_SPEND) AS SUPPLIER_SPEND_PERCENTAGE,
        CASE WHEN SD.SUPPLIER_SPEND > 0 THEN SUM(COALESCE(SD.SUPPLIER_SPEND,0)) OVER (PARTITION BY SD.YEAR, SD.CATEGORY, SD.SUBCATEGORY
        ORDER BY COALESCE(SD.SUPPLIER_SPEND,0) DESC)/TD.TOTAL_SPEND ELSE NULL END AS CUMULATIVE_SUPPLIER_SPEND_PERCENTAGE,
        50/100 AS FIRST_TARGET,
        10/100 AS SECOND_TARGET
    FROM  SUPPLIER_DATA SD
    JOIN TOTAL_DATA TD ON TD.YEAR = SD.YEAR 
    AND TD.CATEGORY = SD.CATEGORY 
    AND TD.SUBCATEGORY = SD.SUBCATEGORY 
),
IDEAL_DATA as (
    SELECT
        YEAR,
        CATEGORY,
        SUBCATEGORY,
        SUPPLIER,
        TOTAL_SPEND,
        SUPPLIER_SPEND,
        SUPP_RANK,
        SUPPLIER_SPEND_PERCENTAGE,
        CUMULATIVE_SUPPLIER_SPEND_PERCENTAGE,
        FIRST_TARGET,
        SECOND_TARGET,
        GREATEST((CUMULATIVE_SUPPLIER_SPEND_PERCENTAGE-SUPPLIER_SPEND_PERCENTAGE), FIRST_TARGET) AS FIRST_SUPPLIER_PERCENTAGE_REC,
        SECOND_TARGET- GREATEST(FIRST_SUPPLIER_PERCENTAGE_REC - FIRST_TARGET, 0) AS SECOND_TARGET_FIN,
        CASE WHEN SUPP_RANK = 1 THEN GREATEST(SUPPLIER_SPEND_PERCENTAGE, FIRST_TARGET) WHEN SUPP_RANK = 2 THEN GREATEST(LEAST(GREATEST(SUPPLIER_SPEND_PERCENTAGE,SECOND_TARGET_FIN), 1-FIRST_SUPPLIER_PERCENTAGE_REC),0) ELSE NULL END AS IDEAL_SUPPLIER_SPEND_PER,
        TOTAL_SPEND * IDEAL_SUPPLIER_SPEND_PER AS IDEAL_SPEND,
        CASE WHEN IDEAL_SPEND IS NULL OR TOTAL_SPEND IS NULL OR TOTAL_SPEND = 0 THEN NULL
        ELSE (IDEAL_SPEND/SUPPLIER_SPEND)-1 END AS GAIN,
    FROM SUPP_RANK_DATA
),
SAVINGS_DATA AS (
SELECT
    YEAR,
    CATEGORY,
    SUBCATEGORY,
    SUPPLIER,
    TOTAL_SPEND,
    SUPPLIER_SPEND,
    SUPP_RANK,
    SUPPLIER_SPEND_PERCENTAGE,
    CUMULATIVE_SUPPLIER_SPEND_PERCENTAGE,
    FIRST_TARGET,
    SECOND_TARGET,
    FIRST_SUPPLIER_PERCENTAGE_REC,
    SECOND_TARGET_FIN,
    IDEAL_SUPPLIER_SPEND_PER,
    IDEAL_SPEND,
    GAIN,
    CASE
        WHEN GAIN > 1 THEN 10/100
        WHEN GAIN <= 0.005 THEN 0
        WHEN GAIN > 0.005 AND GAIN < 0.5 THEN 10/100
        WHEN GAIN >= 0.5 AND GAIN <= 1 THEN 10/100
        ELSE NULL
    END AS SAVINGS_PERCENTAGE
 FROM IDEAL_DATA
),
FINAL_DATA AS (
    SELECT
        YEAR,
        CATEGORY,
        SUBCATEGORY,
        SUPPLIER,
        SUPP_RANK,
        SUPPLIER_SPEND AS SPEND,
        SUPPLIER_SPEND_PERCENTAGE,
        COALESCE(IDEAL_SUPPLIER_SPEND_PER,0) AS IDEAL_SUPPLIER_SPEND_PERCENTAGE,
        COALESCE(IDEAL_SPEND,0) AS IDEAL_SPEND,
        CASE WHEN GAIN > 1
            THEN '100+%'
            WHEN GAIN >= 0 AND GAIN < 0.005 
            THEN 'No change'
            WHEN GAIN < 0 THEN 'Less than 0%'
            ELSE CONCAT(ROUND((GAIN*100),1),'%')
        END AS GAIN_IN_SUPPLIER_SPEND_PERCENTAGE,
        COALESCE(SAVINGS_PERCENTAGE, 0) AS SAVINGS_PERCENTAGE,
        COALESCE(SAVINGS_PERCENTAGE*GREATEST(IDEAL_SPEND-SUPPLIER_SPEND, 0), 0) AS SUPPLIER_SAVINGS
    FROM
        SAVINGS_DATA
)
SELECT 
    YEAR,
    CATEGORY,
    SUBCATEGORY,
    SUPPLIER,
    SPEND,
    SUPPLIER_SAVINGS
FROM
    SAVINGS_DATA