WITH SPENDBYDIM AS (
    SELECT 
        YEAR(TO_DATE(P.DIM_DATE, 'YYYYMMDD')) AS YEAR,
        QUARTER(TO_DATE(P.DIM_DATE, 'YYYYMMDD')) AS QUARTER,
        MONTH(TO_DATE(P.DIM_DATE, 'YYYYMMDD')) AS MONTH,
        SUM(FP.MES_SPEND_CURR_1)  AS TOTAL_SPEND,
        ST.TXT_CATEGORY_LEVEL_2 AS CATEGORY,
        COMP.TXT_LEVEL_4 AS COMPANY,
        SC.TXT_COUNTRY,
        FP.DIM_SUPPLIER,
        D.TXT_CONS_SUPPLIER_L1,
        G.TXT_PLANT AS PLANT,
        C.TXT_MATERIAL,
        FP.DIM_MATERIAL
    FROM
        DATA.VT_C_FACT_INVOICEPOSITION_MULTIPLIED FP
        JOIN DATA.VT_C_DIM_MATERIAL C ON C.DIM_MATERIAL = FP.DIM_MATERIAL
        JOIN DATA.VT_C_DIM_SUPPLIER D ON D.DIM_SUPPLIER = FP.DIM_SUPPLIER
        JOIN DATA.VT_C_DIM_SOURCINGTREE_TECHCME ST ON ST.DIM_SOURCING_TREE = FP.DIM_SOURCING_TREE
        JOIN DATA.VT_DIM_PLANT G ON G.DIM_PLANT = FP.DIM_PLANT
        JOIN DATA.VT_DIM_SUPPLIERCOUNTRY SC ON SC.DIM_COUNTRY = FP.DIM_COUNTRY
        JOIN DATA.VT_DIM_COMPANY COMP ON COMP.DIM_COMPANY = FP.DIM_COMPANY
        JOIN DATA.VT_DIM_PERIOD P ON P.DIM_DATE = FP.DIM_DATE
    where g.TXT_PLANT <>'#'
         and c.DIM_MATERIAL <>'-1'
         and YEAR(TO_DATE(P.DIM_DATE, 'YYYYMMDD')) = YEAR(CURRENT_DATE)
         and LOWER(ST.TXT_CATEGORY_LEVEL_2) = LOWER('Bearings')
    GROUP BY
        YEAR(TO_DATE(P.DIM_DATE, 'YYYYMMDD')),
        QUARTER(TO_DATE(P.DIM_DATE, 'YYYYMMDD')),
        MONTH(TO_DATE(P.DIM_DATE, 'YYYYMMDD')),
        SC.TXT_COUNTRY,
        ST.TXT_CATEGORY_LEVEL_2,
        COMP.TXT_LEVEL_4,
        FP.DIM_SUPPLIER,
        D.TXT_CONS_SUPPLIER_L1,
        G.TXT_PLANT,
        C.TXT_MATERIAL,
        FP.DIM_MATERIAL
),

RUNNING_TOTAL AS (
SELECT DISTINCT YEAR,MONTH,CATEGORY,DIM_SUPPLIER,DIM_MATERIAL,PLANT,
     SUM(TOTAL_SPEND) OVER ( PARTITION BY YEAR,CATEGORY,TXT_CONS_SUPPLIER_L1
            ORDER BY
                TOTAL_SPEND DESC ROWS BETWEEN UNBOUNDED PRECEDING
                AND CURRENT ROW
        ) AS CUM_SPEND,
from SPENDBYDIM
),

TOTAL_SPEND AS (
    SELECT
        DISTINCT SUM(TOTAL_SPEND) OVER (Partition by Category,YEAR,QUARTER,MONTH,TXT_CONS_SUPPLIER_L1) AS
         ALL_SPEND_SUPPLIER,
         SUM(TOTAL_SPEND) OVER (Partition by Category,YEAR,TXT_CONS_SUPPLIER_L1) AS
         TOTAL_SPEND_BY_SUPPLIER,
        DIM_SUPPLIER AS DIM_SUPPLIER,YEAR,Category,QUARTER,MONTH
    FROM SPENDBYDIM
),
SUPP_RANK AS (
    SELECT DISTINCT
        TXT_CONS_SUPPLIER_L1 AS SUPPLIER,YEAR,CATEGORY,SUM(TOTAL_SPEND),
        CASE
            WHEN SUM(TOTAL_SPEND) > 0 THEN DENSE_RANK() OVER (PARTITION BY YEAR,CATEGORY
                ORDER BY
                    SUM(TOTAL_SPEND) DESC 
            )
            ELSE NULL
        END AS RANK
    FROM
        SPENDBYDIM
    GROUP BY
        TXT_CONS_SUPPLIER_L1,YEAR,CATEGORY
),
CUMM_SUPP AS (
    SELECT DISTINCT
        TXT_COUNTRY,
        SBD.YEAR,
        SBD.QUARTER,
        SBD.MONTH,
        SBD.CATEGORY,
        SBD.COMPANY AS COMPANY,
        SBD.PLANT,
        SBD.TXT_CONS_SUPPLIER_L1,
        SBD.TOTAL_SPEND,
        TOTAL_SPEND_BY_SUPPLIER,
        ALL_SPEND_SUPPLIER,
        (TOTAL_SPEND/ ALL_SPEND_SUPPLIER) AS SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
        --MES_SPEND_CURR_1,
        CUM_SPEND,
        SR.RANK,
        CASE
            WHEN IS_NULL_VALUE(TOTAL_SPEND) THEN NULL
            ELSE (CUM_SPEND / ALL_SPEND_SUPPLIER) 
        END AS SUPPLIER_SPEND_PRCT_CUMULATIVE,
        1 AS FIRST_TARGET,
        10 AS SECOND_TARGET,
        10 AS THIRD_TARGET,
        SBD.DIM_SUPPLIER,
        TXT_MATERIAL,
        SBD.DIM_MATERIAL,
        
    FROM
        SPENDBYDIM SBD
        JOIN TOTAL_SPEND TS ON SBD.DIM_SUPPLIER = TS.DIM_SUPPLIER
        and SBD.YEAR=TS.YEAR 
        and SBD.QUARTER=TS.QUARTER and SBD.MONTH=TS.MONTH and SBD.CATEGORY=TS.CATEGORY
        JOIN SUPP_RANK SR ON SBD.TXT_CONS_SUPPLIER_L1 = SR.SUPPLIER
        and SBD.CATEGORY=SR.CATEGORY and SBD.YEAR=SR.YEAR
       JOIN RUNNING_TOTAL RT ON TS.DIM_SUPPLIER=RT.DIM_SUPPLIER
       and TS.YEAR=RT.YEAR and TS.CATEGORY=RT.CATEGORY
       and SBD.DIM_MATERIAL=RT.DIM_MATERIAL
       and SBD.MONTH=RT.MONTH
       and SBD.PLANT=RT.PLANT
),
SUPP_TARGET AS (
    SELECT DISTINCT
        TXT_COUNTRY,
        YEAR,
        QUARTER,
        MONTH,
        CATEGORY,
        COMPANY,
        PLANT,
        TXT_CONS_SUPPLIER_L1,
        TXT_MATERIAL,
        DIM_SUPPLIER,
        ALL_SPEND_SUPPLIER,
        TOTAL_SPEND,
        TOTAL_SPEND_BY_SUPPLIER,
        SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
        RANK,
        CUM_SPEND,
        SUPPLIER_SPEND_PRCT_CUMULATIVE,
        FIRST_TARGET,
        SECOND_TARGET,
        THIRD_TARGET,
        SUPPLIER_SPEND_PRCT_CUMULATIVE - SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY AS FIRST_SUPPLIER_PRCT,
        GREATEST (
            SUPPLIER_SPEND_PRCT_CUMULATIVE - SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
            FIRST_TARGET
        ) AS FIRST_SUPPLIER_PRCT_RECOMMENDED,
        SECOND_TARGET - GREATEST(
            GREATEST (
                SUPPLIER_SPEND_PRCT_CUMULATIVE - SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
                FIRST_TARGET
            ) - FIRST_TARGET,
            0
        ) AS SECOND_TARGET_UPDATED,
        THIRD_TARGET - GREATEST (
            GREATEST (
                SUPPLIER_SPEND_PRCT_CUMULATIVE - SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
                FIRST_TARGET
            ) + (
                SECOND_TARGET - GREATEST(
                    GREATEST (
                        SUPPLIER_SPEND_PRCT_CUMULATIVE - SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
                        FIRST_TARGET
                    ) - FIRST_TARGET,
                    0
                )
            ) - FIRST_TARGET,
            0
        ) AS THIRD_TARGET_UPDATED
    FROM
        CUMM_SUPP
),
IDEAL_SPEND AS(
    SELECT DISTINCT
        TXT_COUNTRY,
        YEAR,
        QUARTER,
        MONTH,
        CATEGORY,
        PLANT,
        COMPANY,
        TXT_CONS_SUPPLIER_L1,
        TXT_MATERIAL,
        DIM_SUPPLIER,
        ALL_SPEND_SUPPLIER,
        TOTAL_SPEND,
        TOTAL_SPEND_BY_SUPPLIER,
        SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
        RANK,
        CUM_SPEND,
        SUPPLIER_SPEND_PRCT_CUMULATIVE,
        FIRST_TARGET,
        SECOND_TARGET,
        THIRD_TARGET,
        FIRST_SUPPLIER_PRCT,
        FIRST_SUPPLIER_PRCT_RECOMMENDED,
        SECOND_TARGET_UPDATED,
        THIRD_TARGET_UPDATED,
        CASE
            WHEN RANK = 1 THEN GREATEST (
                SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
                FIRST_TARGET
            )
            WHEN RANK = 2 THEN GREATEST (
                LEAST (
                    GREATEST (
                        SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
                        SECOND_TARGET_UPDATED
                    ),
                    1 - FIRST_SUPPLIER_PRCT_RECOMMENDED
                )
            )
            ELSE 0
        END IDEAL_SUPPLIER_SPEND_PER
    FROM
        SUPP_TARGET
),
SUPP_CON AS (
    SELECT DISTINCT
        TXT_COUNTRY,
        YEAR,
        QUARTER,
       MONTH,
        CATEGORY,
        COMPANY,
        PLANT,
        TXT_CONS_SUPPLIER_L1,
        TXT_MATERIAL,
        DIM_SUPPLIER,
        ALL_SPEND_SUPPLIER,
        TOTAL_SPEND,
        SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY,
        RANK,
        CUM_SPEND,
        TOTAL_SPEND_BY_SUPPLIER,
        SUPPLIER_SPEND_PRCT_CUMULATIVE,
        FIRST_TARGET,
        SECOND_TARGET,
        THIRD_TARGET,
        FIRST_SUPPLIER_PRCT,
        FIRST_SUPPLIER_PRCT_RECOMMENDED,
        SECOND_TARGET_UPDATED,
        THIRD_TARGET_UPDATED,
        IDEAL_SUPPLIER_SPEND_PER,
        ALL_SPEND_SUPPLIER * IDEAL_SUPPLIER_SPEND_PER AS IDEAL_SUPPLIER_SPEND,
        GREATEST(
            (ALL_SPEND_SUPPLIER * IDEAL_SUPPLIER_SPEND_PER) - TOTAL_SPEND,
            0
        ) AS SAVINGSAMOUNT,
        (
            (ALL_SPEND_SUPPLIER * IDEAL_SUPPLIER_SPEND_PER) / TOTAL_SPEND
        ) -1 AS GAIN,
        CASE
            WHEN IS_NULL_VALUE(IDEAL_SUPPLIER_SPEND_PER) THEN NULL
            WHEN (
                (
                    (ALL_SPEND_SUPPLIER * IDEAL_SUPPLIER_SPEND_PER) / TOTAL_SPEND
                ) -1
            ) > 1 THEN 10 / 100
            WHEN (
                (
                    (ALL_SPEND_SUPPLIER * IDEAL_SUPPLIER_SPEND_PER) / TOTAL_SPEND
                ) -1
            ) <= 0.005 THEN 0
            WHEN (
                (
                    (
                        (ALL_SPEND_SUPPLIER * IDEAL_SUPPLIER_SPEND_PER) / TOTAL_SPEND
                    ) -1
                ) > 0.0005
                OR (
                    (
                        (ALL_SPEND_SUPPLIER * IDEAL_SUPPLIER_SPEND_PER) / TOTAL_SPEND
                    ) -1
                ) < 0.50
            ) THEN 10 / 100
            WHEN (
                (
                    (
                        (ALL_SPEND_SUPPLIER * IDEAL_SUPPLIER_SPEND_PER) / TOTAL_SPEND
                    ) -1
                ) > 0.50
                OR (
                    (
                        (ALL_SPEND_SUPPLIER * IDEAL_SUPPLIER_SPEND_PER) / TOTAL_SPEND
                    ) -1
                ) < 1
            ) THEN 10 / 100
            ELSE 0
        END AS SUPPLIER_CONSOLIDATION_SAVINGS_PER
    FROM
        IDEAL_SPEND
)
SELECT DISTINCT
    YEAR,
    QUARTER,
    MONTH,
    TRIM(CATEGORY) AS CATEGORY,
    TRIM(TXT_COUNTRY) AS COUNTRY,
    TRIM(PLANT) AS PLANT,
    TRIM(COMPANY) AS COMPANY,
    TRIM(TXT_CONS_SUPPLIER_L1) AS SUPPLIER,
    TRIM(TXT_MATERIAL) AS MATERIAL,
    ALL_SPEND_SUPPLIER,
    TOTAL_SPEND,
    0 AS NO_OF_SUPPLIERS,
    0 AS NO_OF_KEY_SUPPLIERS,
    SUPPLIER_SPEND_PRCT_BY_SUBCATEGORY AS SUPPLIER_SPEND_PERCENTAGE_BY_SUBCATEGORY,
    RANK,
    CUM_SPEND AS CUMULATIVE_SPEND,
    SUPPLIER_SPEND_PRCT_CUMULATIVE AS SUPPLIER_SPEND_PERCENTAGE_CUMULATIVE,
    FIRST_TARGET,
    SECOND_TARGET,
    THIRD_TARGET,
    FIRST_SUPPLIER_PRCT AS FIRST_SUPPLIER_PERCENTAGE,
    FIRST_SUPPLIER_PRCT_RECOMMENDED AS FIRST_SUPPLIER_PERCENTAGE_RECOMMENDED ,
    SECOND_TARGET_UPDATED,
    THIRD_TARGET_UPDATED,
    IDEAL_SUPPLIER_SPEND_PER,
    IDEAL_SUPPLIER_SPEND,
    GAIN,
    SUPPLIER_CONSOLIDATION_SAVINGS_PER,
    SAVINGSAMOUNT,
    0 AS AVERAGE_SPEND_PER_KEY_SUPPLIER,
    SUPPLIER_CONSOLIDATION_SAVINGS_PER * SAVINGSAMOUNT AS SUPPLIERSAVINGS
FROM
    SUPP_CON
ORDER BY
    YEAR DESC,
    QUARTER ASC,
    MONTH ASC,
    RANK ASC